@model PaginatedList<Product>
@using System.Text.RegularExpressions;


@{
    ViewBag.Title = "GitUser";
}

<h2>Car Sales</h2>



<table class="table">
    <thead>
        <tr>

            <th>
                 Results
            </th>
          
            <th>
                 Make
            </th>
            <th>
                Model
           </th>
            <th>
                Title
           </th>
           <th>
                Price
           </th>
            <th>
                Image
            </th>
        <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach(var item in Model) {
            <tr>
           
          
            <td>
                 @Html.DisplayFor(modelItem => item.Make)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td>
            @Html.DisplayFor(modelItem => item.Title)
            </td>
               <td>
            @Html.DisplayFor(modelItem => item.Price)
            </td>
             <td>
                <img src="@Html.DisplayFor(modelItem => item.Thumbnail)" alt="Paris" width="300" height="300">
           
            </td>
           </tr>
            
        }
    </tbody>
</table>

@{

    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}
@* The paging buttons are displayed by tag helpers *@
<a asp-action="Product"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Product"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
   Next
</a>